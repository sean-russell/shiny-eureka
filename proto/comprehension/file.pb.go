// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/comprehension/file.proto

package comprehension

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DataChunk struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataChunk) Reset()         { *m = DataChunk{} }
func (m *DataChunk) String() string { return proto.CompactTextString(m) }
func (*DataChunk) ProtoMessage()    {}
func (*DataChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e5a1b4a6a5c01ff, []int{0}
}

func (m *DataChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataChunk.Unmarshal(m, b)
}
func (m *DataChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataChunk.Marshal(b, m, deterministic)
}
func (m *DataChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataChunk.Merge(m, src)
}
func (m *DataChunk) XXX_Size() int {
	return xxx_messageInfo_DataChunk.Size(m)
}
func (m *DataChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_DataChunk.DiscardUnknown(m)
}

var xxx_messageInfo_DataChunk proto.InternalMessageInfo

func (m *DataChunk) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Response struct {
	Received             bool     `protobuf:"varint,1,opt,name=received,proto3" json:"received,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e5a1b4a6a5c01ff, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetReceived() bool {
	if m != nil {
		return m.Received
	}
	return false
}

func init() {
	proto.RegisterType((*DataChunk)(nil), "comprehension.DataChunk")
	proto.RegisterType((*Response)(nil), "comprehension.Response")
}

func init() {
	proto.RegisterFile("proto/comprehension/file.proto", fileDescriptor_7e5a1b4a6a5c01ff)
}

var fileDescriptor_7e5a1b4a6a5c01ff = []byte{
	// 173 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0xce, 0xcf, 0x2d, 0x28, 0x4a, 0xcd, 0x48, 0xcd, 0x2b, 0xce, 0xcc, 0xcf, 0xd3,
	0x4f, 0xcb, 0xcc, 0x49, 0xd5, 0x03, 0x4b, 0x08, 0xf1, 0xa2, 0xc8, 0x28, 0xc9, 0x73, 0x71, 0xba,
	0x24, 0x96, 0x24, 0x3a, 0x67, 0x94, 0xe6, 0x65, 0x0b, 0x09, 0x71, 0xb1, 0xa4, 0x24, 0x96, 0x24,
	0x4a, 0x30, 0x2a, 0x30, 0x6a, 0xf0, 0x04, 0x81, 0xd9, 0x4a, 0x6a, 0x5c, 0x1c, 0x41, 0xa9, 0xc5,
	0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x42, 0x52, 0x5c, 0x1c, 0x45, 0xa9, 0xc9, 0xa9, 0x99, 0x65, 0xa9,
	0x29, 0x60, 0x35, 0x1c, 0x41, 0x70, 0xbe, 0x51, 0x04, 0x17, 0x37, 0xc8, 0x96, 0xe0, 0xd4, 0xa2,
	0xb2, 0xcc, 0xe4, 0x54, 0x21, 0x4f, 0x2e, 0x11, 0x97, 0xfc, 0xf2, 0xbc, 0x9c, 0xfc, 0xc4, 0x94,
	0x80, 0xa2, 0xfc, 0x94, 0xd2, 0xe4, 0x12, 0xcf, 0xdc, 0xc4, 0xf4, 0x54, 0x21, 0x09, 0x3d, 0x14,
	0xfb, 0xf5, 0xe0, 0x96, 0x4b, 0x89, 0xa3, 0xc9, 0xc0, 0x6c, 0x4d, 0x62, 0x03, 0x3b, 0xdc, 0x18,
	0x10, 0x00, 0x00, 0xff, 0xff, 0x1d, 0x40, 0x07, 0x7e, 0xda, 0x00, 0x00, 0x00,
}
